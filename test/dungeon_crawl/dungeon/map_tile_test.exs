defmodule DungeonCrawl.Dungeon.MapTileTest do
  use DungeonCrawl.DataCase

  alias DungeonCrawl.Player.Location
  alias DungeonCrawl.Dungeon.MapTile

  @valid_attrs %{row: 42, col: 42, tile_template_id: 2, dungeon_id: 1}
  @invalid_attrs %{}

  test "changeset with valid attributes" do
    changeset = MapTile.changeset(%MapTile{}, @valid_attrs)
    assert changeset.valid?
  end

  test "changeset with invalid attributes" do
    changeset = MapTile.changeset(%MapTile{}, @invalid_attrs)
    refute changeset.valid?
  end

  test "on_delete deletes all associated player_locations" do
    dungeon = insert_autogenerated_dungeon()
    player_tile = insert_player_map_tile(%{dungeon_id: dungeon.id})
    player_location = insert_player_location(%{map_tile_id: player_tile.id})
    assert {:ok, deleted_player_tile} = Repo.delete(player_tile)
    refute Repo.get_by(Location, %{user_id_hash: player_location.user_id_hash})
    refute Repo.get(MapTile, deleted_player_tile.id)
  end
end
