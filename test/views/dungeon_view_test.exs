defmodule DungeonCrawlWeb.DungeonViewTest do
  use DungeonCrawlWeb.ConnCase, async: true

  alias DungeonCrawlWeb.DungeonView

  test "activate_or_new_version_button/2 renders activate if dungeon inactive", %{conn: conn} do
    map = insert_autogenerated_dungeon(%{active: false})
    assert Regex.match?(~r{Activate}, inspect(DungeonView.activate_or_new_version_button(conn, map)))
  end


  test "activate_or_new_version_button/2 renders nothing if a new version already exists", %{conn: conn} do
    map = insert_autogenerated_dungeon()
    _new_version = insert_autogenerated_dungeon(%{previous_version_id: map.id})
    refute DungeonView.activate_or_new_version_button(conn, map)
  end


  test "activate_or_new_version_button/2 renders new_version if dungeon active", %{conn: conn} do
    map = insert_autogenerated_dungeon()
    assert Regex.match?(~r{New Version}, inspect(DungeonView.activate_or_new_version_button(conn, map)))
  end
end
