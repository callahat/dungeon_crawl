defmodule DungeonCrawlWeb.TestHelpers do
  alias DungeonCrawl.Repo

  def insert_user(attrs \\ %{}) do
    changes = Map.merge(%{
      name: "Some User",
      username: "user#{Base.encode16(:crypto.rand_bytes(8))}",
      password: "secretsauce",
    }, attrs)

    %DungeonCrawlWeb.User{}
    |> DungeonCrawlWeb.User.admin_changeset(changes)
    |> DungeonCrawlWeb.User.put_user_id_hash(:base64.encode(:crypto.strong_rand_bytes(24)))
    |> Repo.insert!()
  end

  def insert_autogenerated_dungeon(attrs \\ %{}) do
    changes = Map.merge(%{
      name: "Autogenerated",
      height: 20,
      width: 20
    }, attrs)

    dungeon = %DungeonCrawlWeb.Dungeon{}
              |> DungeonCrawlWeb.Dungeon.changeset(changes)
              |> Ecto.Changeset.put_change(:autogenerated, true)
              |> Repo.insert!()
    Repo.insert_all(DungeonCrawlWeb.DungeonMapTile, DungeonCrawlWeb.Dungeon.generate_dungeon_map_tiles(dungeon, DungeonCrawl.DungeonGenerator.TestRooms))
    dungeon
  end

  def insert_player_location(attrs \\ %{}) do
    changes = Map.merge(%{
      row: 3,
      col: 1,
      user_id_hash: "good_hash"
    }, attrs)

    %DungeonCrawlWeb.PlayerLocation{}
    |> DungeonCrawlWeb.PlayerLocation.changeset(changes)
    |> Repo.insert!()
  end
end
